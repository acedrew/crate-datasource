{"version":3,"sources":["../src/query_builder.js"],"names":[],"mappings":";;;;;AAwCA,WAAS,kBAAT,CAA4B,YAA5B,EAA0C;AACxC,QAAI,kBAAkB,EAAE,GAAF,CAAM,YAAN,EAAoB,UAAC,SAAD,EAAY,KAAZ,EAAsB;AAC9D,UAAI,WAAW,EAAf;AACA,UAAI,UAAU,CAAd,EAAiB;AACf,oBAAY,MAAM,UAAU,SAA5B;AACD;AACD,UAAI,QAAQ,EAAE,QAAF,CAAW,UAAU,KAArB,IAA8B,OAAO,UAAU,KAAjB,CAA9B,GAAwD,MAAM,UAAU,KAAhB,GAAwB,GAA5F;AACA,kBAAY,MAAM,UAAU,IAAhB,GAAuB,GAAvB,GAA6B,UAAU,QAAvC,GAAkD,GAAlD,GAAwD,KAApE;AACA,aAAO,QAAP;AACD,KARqB,CAAtB;AASA,WAAO,gBAAgB,IAAhB,CAAqB,GAArB,CAAP;AACD;;;;AAnDM,O;;;AAEA,eAAS,UAAT,GAAsB;AAC3B,YAAI,QAAQ,iCACA,iCADA,GAEA,iEAFA,GAGA,YAHZ;AAIA,eAAO,KAAP;AACD;;;;AAEM,eAAS,SAAT,CAAmB,MAAnB,EAA2B;AAChC,YAAI,QAAQ,uBACC,iCADD,GAEC,qBAFD,GAEyB,MAFzB,GAEkC,IAFlC,GAGC,YAHb;AAIA,eAAO,KAAP;AACD;;;;AAEM,eAAS,UAAT,CAAoB,MAApB,EAA4B,KAA5B,EAAmC;AACxC,YAAI,QAAQ,wBACC,kCADD,GAEC,qBAFD,GAEyB,MAFzB,GAEkC,IAFlC,GAGG,kBAHH,GAGwB,KAHxB,GAGgC,IAHhC,GAIC,YAJb;AAKA,eAAO,KAAP;AACD;;;;AAEM,eAAS,SAAT,CAAmB,MAAnB,EAA2B,KAA3B,EAAkC,MAAlC,EAA0C,KAA1C,EAAiD;AACtD,YAAI,QAAQ,qBAAqB,MAArB,GAA8B,GAA9B,GACC,SADD,GACa,MADb,GACsB,OADtB,GACgC,KADhC,GACwC,IADpD;AAEA,YAAI,KAAJ,EAAW;AACT,mBAAS,YAAY,KAArB;AACD;AACD,eAAO,KAAP;AACD;;;;AAEM,eAAS,YAAT,CAAsB,KAAtB,EAA6B,QAA7B,EAAuC,MAAvC,EAA+C;AACpD,eAAO,QAAQ,gBAAR,GAA2B,QAA3B,GAAsC,cAAtC,GAAuD,MAA9D;AACD;;;AAeM,eAAS,UAAT,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,MAAtC,EAA8C;AACnD,YAAI,QAAQ,SAAZ;AACA,gBAAQ,QAAQ,OAAO,aAAP,CAAqB,IAArB,EAAhB;AACA,gBAAQ,QAAQ,UAAR,GAAqB,OAAO,MAA5B,GAAqC,OAArC,GAA+C,OAAO,KAAtD,GAA8D,IAAtE;;;AAGA,YAAI,OAAO,YAAP,IAAuB,OAAO,YAAP,CAAoB,MAA/C,EAAuD;AACrD,mBAAS,WAAW,mBAAmB,OAAO,YAA1B,CAApB;AACD;;;AAGD,YAAI,YAAY,MAAhB,EAAwB;AACtB,cAAI,CAAC,OAAO,YAAR,IAAwB,OAAO,YAAP,CAAoB,MAApB,KAA+B,CAA3D,EAA8D;AAC5D,qBAAS,SAAT;AACD,WAFD,MAEO;AACL,qBAAS,OAAT;AACD;AACD,cAAI,aAAa,OAAO,OAAxB;AACA,mBAAS,aAAa,KAAb,GAAqB,QAArB,GACP,OADO,GACG,UADH,GACgB,KADhB,GACwB,MADjC;AAED;;;AAGD,gBAAQ,QAAQ,YAAR,GAAuB,OAAO,OAA9B,GAAwC,GAAxC,GAA8C,OAAO,SAA7D;AACA,eAAO,KAAP;AACD","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\n\nexport function getSchemas() {\n  var query = \"SELECT DISTINCT schema_name \" +\n              \"FROM information_schema.tables \" +\n              \"WHERE schema_name NOT IN ('information_schema', 'blob', 'sys') \" +\n              \"ORDER BY 1\";\n  return query;\n}\n\nexport function getTables(schema) {\n  var query = \"SELECT table_name \" +\n               \"FROM information_schema.tables \" +\n               \"WHERE schema_name='\" + schema + \"' \" +\n               \"ORDER BY 1\";\n  return query;\n}\n\nexport function getColumns(schema, table) {\n  var query = \"SELECT column_name \" +\n               \"FROM information_schema.columns \" +\n               \"WHERE schema_name='\" + schema + \"' \" +\n                 \"AND table_name='\" + table + \"' \" +\n               \"ORDER BY 1\";\n  return query;\n}\n\nexport function getValues(schema, table, column, limit) {\n  var query = \"SELECT DISTINCT \" + column + \" \" +\n               \"FROM \\\"\" + schema + \"\\\".\\\"\" + table + \"\\\"\";\n  if (limit) {\n    query += \" LIMIT \" + limit;\n  }\n  return query;\n}\n\nexport function addTimeRange(query, timeFrom, timeTo) {\n  return query + \" WHERE time > \" + timeFrom + \" AND time < \" + timeTo;\n}\n\nfunction renderWhereClauses(whereClauses) {\n  var renderedClauses = _.map(whereClauses, (clauseObj, index) => {\n    var rendered = \"\";\n    if (index !== 0) {\n      rendered += ' ' + clauseObj.condition;\n    }\n    var right = _.isNumber(clauseObj.right) ? Number(clauseObj.right) : \"'\" + clauseObj.right + \"'\";\n    rendered += ' ' + clauseObj.left + ' ' + clauseObj.operator + ' ' + right;\n    return rendered;\n  });\n  return renderedClauses.join(' ');\n}\n\nexport function buildQuery(target, timeFrom, timeTo) {\n  var query = \"SELECT \";\n  query = query + target.selectColumns.join();\n  query = query + \" FROM \\\"\" + target.schema + \"\\\".\\\"\" + target.table + \"\\\"\";\n\n  // WHERE\n  if (target.whereClauses && target.whereClauses.length) {\n    query += \" WHERE\" + renderWhereClauses(target.whereClauses);\n  }\n\n  // Add time range\n  if (timeFrom || timeTo) {\n    if (!target.whereClauses || target.whereClauses.length === 0) {\n      query += \" WHERE \";\n    } else {\n      query += \" AND \";\n    }\n    var timeColumn = target.orderBy;\n    query += timeColumn + \" > \" + timeFrom +\n      \" AND \" + timeColumn + \" < \" + timeTo;\n  }\n\n  // ORDER BY\n  query = query + \" ORDER BY \" + target.orderBy + \" \" + target.orderType;\n  return query;\n}\n"]}