{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport * as queryBuilder from './query_builder';\n\nexport class CrateDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $q, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.operators = {\n      compare: ['<', '>', '<=', '>=', '=', '<>', '!=', 'like'],\n      regex: ['~', '!~']\n    };\n\n    var target_defaults = {\n      schema: \"doc\",\n      table: \"default\",\n      selectColumns: [\"*\"],\n      groupBy: \"*\",\n      whereClauses: [],\n      orderBy: \"time\",\n      orderType: \"ASC\"\n    };\n    _.defaults(this.target, target_defaults);\n\n    var orderTypes = [\"ASC\", \"DESC\"];\n\n    this.orderTypes = _.map(orderTypes, this.uiSegmentSrv.newSegment);\n    this.orderTypeSegment = this.uiSegmentSrv.newSegment(this.target.orderType);\n    this.orderBySegment = this.uiSegmentSrv.newSegment(this.target.orderBy);\n    this.schemaSegment = this.uiSegmentSrv.newSegment(this.target.schema);\n    this.tableSegment = this.uiSegmentSrv.newSegment(this.target.table);\n    this.selectColumnSegments = _.map(this.target.selectColumns, this.uiSegmentSrv.newSegment);\n    this.groupBySegment = this.uiSegmentSrv.newSegment(this.target.groupBy);\n\n    // Build WHERE segments\n    this.whereSegments = [];\n    var self = this;\n    _.forEach(this.target.whereClauses, whereClause => {\n      if (whereClause.condition) {\n        self.whereSegments.push(uiSegmentSrv.newCondition(whereClause.condition));\n      }\n      self.whereSegments.push(uiSegmentSrv.newKey(whereClause.left));\n      self.whereSegments.push(uiSegmentSrv.newOperator(whereClause.operator));\n      self.whereSegments.push(uiSegmentSrv.newKeyValue(whereClause.right));\n    });\n\n    this.fixSelectColumnSegments();\n    this.fixSegments(this.whereSegments);\n\n    this.removeWhereSegment = uiSegmentSrv.newSegment({fake: true, value: '-- remove --'});\n  }\n\n  crateQuery(query) {\n    return this.datasource._sql_query(query).then(response => {\n      return response.data.rows;\n    });\n  }\n\n  buildQuery() {\n    this.target.query = queryBuilder.buildQuery(this.target);\n    this.onChangeInternal();\n  }\n\n  // Event handlers\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  schemaChanged() {\n    this.target.schema = this.schemaSegment.value;\n    this.buildQuery();\n  }\n\n  tableChanged() {\n    this.target.table = this.tableSegment.value;\n    this.buildQuery();\n  }\n\n  columnSegmentChanged(segment, index) {\n    if (segment.type === 'plus-button') {\n      segment.type = undefined;\n      this.selectColumnSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n    this.target.selectColumns = _.map(_.filter(this.selectColumnSegments, segment => {\n      return segment.type !== 'plus-button';\n    }), 'value');\n    this.buildQuery();\n  }\n\n  groupBySegmentChanged() {\n    this.target.groupBy = this.groupBySegment.value;\n    this.buildQuery();\n  }\n\n  orderByChanged() {\n    this.target.orderBy = this.orderBySegment.value;\n    this.target.orderType = this.orderTypeSegment.value;\n    this.buildQuery();\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  // Query suggestions\n  getSchemas() {\n    var self = this;\n    return this.crateQuery(queryBuilder.getSchemas())\n      .then(rows => {\n        return self.transformToSegments(rows);\n      });\n  }\n\n  getTables() {\n    var self = this;\n    return this.crateQuery(queryBuilder.getTables(this.schemaSegment.value))\n      .then(rows => {\n        return self.transformToSegments(rows);\n      });\n  }\n\n  getColumns() {\n    var self = this;\n    return this.crateQuery(queryBuilder.getColumns(this.schemaSegment.value, this.tableSegment.value))\n      .then(rows => {\n        return self.transformToSegments(rows);\n      });\n  }\n\n  getValues(column, limit=10) {\n    var self = this;\n    return this.crateQuery(queryBuilder.getValues(this.schemaSegment.value, this.tableSegment.value, column, limit))\n      .then(rows => {\n        var uniqRows = _.uniq(_.flatten(rows));\n        return self.transformToSegments(uniqRows);\n      });\n  }\n\n  getColumnsOrValues(segment, index) {\n    if (segment.type === 'condition') {\n      return this.$q.when([this.uiSegmentSrv.newSegment('AND'), this.uiSegmentSrv.newSegment('OR')]);\n    }\n    if (segment.type === 'operator') {\n      return this.$q.when(this.uiSegmentSrv.newOperators(this.operators.compare));\n    }\n\n    if (segment.type === 'key' || segment.type === 'plus-button') {\n      return this.getColumns().then(columns => {\n        columns.splice(0, 0, angular.copy(this.removeWhereSegment));\n        return columns;\n      });\n    } else if (segment.type === 'value') {\n      return this.getValues(this.whereSegments[index - 2].value).then(columns => {\n        columns.splice(0, 0, angular.copy(this.removeWhereSegment));\n        return columns;\n      });\n    }\n  }\n\n  whereSegmentUpdated(segment, index) {\n    this.whereSegments[index] = segment;\n\n    if (segment.value === this.removeWhereSegment.value) {\n      this.whereSegments.splice(index, 3);\n      if (this.whereSegments.length === 0) {\n        this.whereSegments.push(this.uiSegmentSrv.newPlusButton());\n      } else if (this.whereSegments.length > 2) {\n        this.whereSegments.splice(Math.max(index - 1, 0), 1);\n        if (this.whereSegments[this.whereSegments.length - 1].type !== 'plus-button') {\n          this.whereSegments.push(this.uiSegmentSrv.newPlusButton());\n        }\n      }\n    } else {\n      if (segment.type === 'plus-button') {\n        if (index > 2) {\n          this.whereSegments.splice(index, 0, this.uiSegmentSrv.newCondition('AND'));\n        }\n        this.whereSegments.push(this.uiSegmentSrv.newOperator('='));\n        this.whereSegments.push(this.uiSegmentSrv.newFake('select tag value', 'value', 'query-segment-value'));\n        segment.type = 'key';\n        segment.cssClass = 'query-segment-key';\n      }\n      if ((index + 1) === this.whereSegments.length) {\n        this.whereSegments.push(this.uiSegmentSrv.newPlusButton());\n      }\n    }\n\n    this.buildWhereClauses();\n\n    // Refresh only if all fields setted\n    if (_.every(this.whereSegments, segment => {\n      return ((segment.value || segment.type === 'plus-button') &&\n              !(segment.fake && segment.type !== 'plus-button'));\n    })) {\n      this.panelCtrl.refresh();\n    }\n  }\n\n  buildWhereClauses() {\n    var i = 0;\n    var whereIndex = 0;\n    var segments = this.whereSegments;\n    var whereClauses = this.target.whereClauses;\n    while (segments.length > i && segments[i].type !== 'plus-button') {\n      if (whereClauses.length < whereIndex + 1) {\n        whereClauses.push({condition: '', left: '', operator: '', right: ''});\n      }\n      if (segments[i].type === 'condition') {\n        whereClauses[whereIndex].condition = segments[i].value;\n      } else if (segments[i].type === 'key') {\n        whereClauses[whereIndex].left = segments[i].value;\n      } else if (segments[i].type === 'operator') {\n        whereClauses[whereIndex].operator = segments[i].value;\n      } else if (segments[i].type === 'value') {\n        whereClauses[whereIndex].right = segments[i].value;\n        whereIndex++;\n      }\n      i++;\n    }\n  }\n\n  getOrderByColumns() {\n    return this.$q.when(this.selectColumnSegments);\n  }\n\n  getOrderTypes() {\n    var orderTypes = [\"ASC\", \"DESC\"];\n    return this.$q.when(this.transformToSegments(orderTypes));\n  }\n\n  fixSelectColumnSegments() {\n    var count = this.selectColumnSegments.length;\n    var lastSegment = this.selectColumnSegments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      this.selectColumnSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  fixSegments(segments) {\n    var count = segments.length;\n    var lastSegment = segments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      segments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  transformToSegments(results) {\n    var segments = _.map(_.flatten(results), value => {\n      return this.uiSegmentSrv.newSegment({\n        value: value.toString(),\n        expandable: false\n      });\n    });\n    return segments;\n  }\n\n}\n\nCrateDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}