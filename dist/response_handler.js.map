{"version":3,"sources":["../src/response_handler.js"],"names":[],"mappings":";;;;;;;AAAO,O;;;AAEA,eAAS,eAAT,CAAyB,MAAzB,EAAiC,QAAjC,EAA2C;AAChD,YAAI,gBAAJ;AACA,YAAI,kBAAkB,EAAE,SAAF,CAAY,OAAO,aAAnB,EAAkC,eAAO;AAC7D,iBAAO,QAAQ,OAAO,OAAtB;AACD,SAFqB,CAAtB;;AAIA,YAAI,oBAAoB,CAAxB,EAA2B;AACzB,6BAAmB,CAAnB;AACD,SAFD,MAEO;AACL,6BAAmB,CAAnB;AACD;;AAED,YAAI,qBAAqB,EAAE,OAAF,CAAU,SAAS,IAAT,CAAc,IAAxB,EAA8B,OAAO,OAArC,CAAzB;AACA,YAAI,OAAO,OAAP,IAAkB,OAAO,OAAP,KAAmB,GAArC,IAA4C,uBAAuB,CAAC,CAAxE,EAA2E;AACzE,cAAI,kBAAkB,EAAE,OAAF,CAAU,SAAS,IAAT,CAAc,IAAxB,EAA8B,eAAO;AACzD,mBAAO,IAAI,kBAAJ,CAAP;AACD,WAFqB,CAAtB;AAGA,cAAI,WAAW,EAAE,GAAF,CAAM,eAAN,EAAuB,UAAC,IAAD,EAAO,GAAP,EAAe;AACnD,gBAAI,aAAa,EAAE,GAAF,CAAM,IAAN,EAAY,eAAO;AAClC,qBAAO,CACL,OAAO,IAAI,gBAAJ,CAAP,CADK,E;AAEL,qBAAO,IAAI,eAAJ,CAAP,C;AAFK,eAAP;AAID,aALgB,CAAjB;AAMA,mBAAO;AACL,sBAAQ,GADH;AAEL,0BAAY;AAFP,aAAP;AAID,WAXc,CAAf;AAYA,iBAAO,QAAP;AACD,SAjBD,MAiBO;AACL,cAAI,aAAa,EAAE,GAAF,CAAM,SAAS,IAAT,CAAc,IAApB,EAA0B,eAAO;AAChD,mBAAO,CACL,OAAO,IAAI,gBAAJ,CAAP,CADK,E;AAEL,mBAAO,IAAI,eAAJ,CAAP,C;AAFK,aAAP;AAID,WALgB,CAAjB;;AAOA,iBAAO,CAAC;AACN,oBAAQ,OAAO,KADT;AAEN,wBAAY;AAFN,WAAD,CAAP;AAID;AACF","file":"response_handler.js","sourcesContent":["import _ from 'lodash';\n\nexport function handle_response(target, response) {\n  var valueColumnIndex;\n  var timeColumnIndex = _.findIndex(target.selectColumns, col => {\n    return col === target.orderBy;\n  });\n\n  if (timeColumnIndex === 0) {\n    valueColumnIndex = 1;\n  } else {\n    valueColumnIndex = 0;\n  }\n\n  var groupByColumnIndex = _.indexOf(response.data.cols, target.groupBy);\n  if (target.groupBy && target.groupBy !== '*' && groupByColumnIndex !== -1) {\n    var groupedResponse = _.groupBy(response.data.rows, row => {\n      return row[groupByColumnIndex];\n    });\n    var datasets = _.map(groupedResponse, (rows, key) => {\n      var datapoints = _.map(rows, row => {\n        return [\n          Number(row[valueColumnIndex]), // value\n          Number(row[timeColumnIndex])  // timestamp\n        ];\n      });\n      return {\n        target: key,\n        datapoints: datapoints\n      };\n    });\n    return datasets;\n  } else {\n    var datapoints = _.map(response.data.rows, row => {\n      return [\n        Number(row[valueColumnIndex]), // value\n        Number(row[timeColumnIndex])  // timestamp\n      ];\n    });\n\n    return [{\n      target: target.table,\n      datapoints: datapoints\n    }];\n  }\n}"]}